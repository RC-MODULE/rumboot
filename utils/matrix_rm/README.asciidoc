ifndef::wd[]
:docinfo:
:toc: macro
:toclevels: 3
:toc-title: Содержание
endif::[]

= Материалы по направлению верификации

toc::[]
:sectnums:

== Сборка:

[subs=+macros]
----
$ mkdir build
$ cd build
$ cmake ..          pass:quotes[*// сборка*]
$ make              pass:quotes[*// компиляция*]
$ ini_build --config=../input/<имя_конф-го_файла>.ini  pass:quotes[*// запуск теста test.c с конф-м файлом <имя_конф-го_файла>.ini*]
----

или

----
$ mkdir build
$ cd build
$ gcc ../algo/ini.c ../theini_handler/ini_loader.c ../reference_model/rm.c test.c -o ini_build
$ ini_build --config=../input/<имя_конф-го_файла>.ini 
----

== Библ-ка для работы с ini-файлами:
link:algo/ini.h[], link:algo/ini.c[]

== Конфигурационный ini-файл
Входной конф-й файл разбивается на секции, для каждой из которых определены:

* структура __<имя_секции>_data__ с описанием полей секции __<имя_секции>__;

* функция __<имя_секции>_handler__, по завершению работы которой переданному, как аргумент, указателю на структуру __<имя_секции>_data__ будут присвоены распарсенные данные из секции __<имя_секции>__ ini-файла;

* функция __<имя_секции>_apply__, вызывает функции, например, референсной модели, над данными структуры __<имя_секции>_data__.

=== Пример секции

Описание полей секции [MATRIX] в link:theini_handler/ini_loader.h[]:
----
typedef struct matrix_data {
  int name1;
} matrix_data;
----

Объявление парсера секции [MATRIX] в link:theini_handler/ini_loader.h[]: 
----
int matrix_handler(...);
----

его описание в link:theini_handler/ini_loader.c[].

Объявление функции, аргументами которой являются распарсенные данные секции [MATRIX] в link:theini_handler/ini_loader.h[]: 
----
void matrix_apply(...);
----

ее описание в link:theini_handler/ini_loader.c[].

== Референсная модель

Все, что относится к ней, в link:reference_model[]

== Тест

Тест link:test.c[], принимающий параметр **--config=<имя_конф-го_файла>.ini** и запускающий функцию парсинга конф-го файла
----
ini_parse(config_file_name, theini_handler, userdata);
----
Функция __theini_handler__ вызывается для каждой секции ini-файла со своими указателями на функции-обработчики __<имя_секции>_handler__ и __<имя_секции>_apply__.


== Исходный пример работы с ini-файлами

rumboot/src/platform/basis/targets/configtool/ini_loader.c

rumboot/src/platform/basis/targets/configtool/hello.ini

Сама библ-ка:

rumboot/include/algo/ini.h

rumboot/src/lib/ini.c
