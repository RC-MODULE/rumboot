ifndef::wd[]
:docinfo:
:toc: macro
:toclevels: 3
:toc-title: Содержание
endif::[]

= Материалы по направлению верификации.

toc::[]
:sectnums:

== Референсная модель.

Объяснение работы блока нейросетевого ускорителя, как и использующихся в данном документе понятий, даны в описании эскизного проекта нейроускорителя: LAVA/doc/working_materials/na_gpu/NA_EP.asciidoc в главе 4.1.2 Блок мартичных операций нейросетевого ускорителя.

Референсная модель - это программная модель блока нейросетевого ускорителя. Располагается в rumboot/utils/matrix_rm/reference_model.

Референсная модель выполняет операции:

* чтения из файла значений куба данных;

* чтения из файлов значений ядер свертки;

* формирования, с учетом харектеристик свертки, из значений куба данных - матрицы данных, из значений ядер свертки - матрицы весов;

* перемножения матрицы данных и матрицы весов - выполнение операции свертки.

Выполнение операции свертки - перемножение матрицы данных и матрицы весов - просходит с учетом аппратной особенности блока нейросетевого ускорителя - ограниченного размера матрицы умножителя.

=== Запуск.

Запуск референсной модели - вызов функции make_all (matrix_config_t* mc), объявленнной в файле matrix_rm.h.

=== Задание входных параметров.

Входные параметры референсной модели - поля структуры типа matrix_config_t.

Описание полей структуры типа matrix_config_t:

* int H - число строк в кубе данных (высота куба данных);

* int W - число столбцов в кубе данных (ширина куба данных);

* int C - количество входных каналов;

* int Tp -  число строк вдоль размерности H над верхней гранью куба данных, заполненных нулями (Top null Padding);

* int Bp - число строк вдоль размерности H под нижней гранью куба данных, заполненных нулями (Bottom null Padding);

* int Lp - число столбцов вдоль размерности W слева от левой грани куба данных, заполненных нулями (Left null Padding);

* int Rp - число столбцов вдоль размерности W справа от правой грани куба данных, заполненных нулями (Right null Padding);

* int R - число строк в ядре свертки;

* int S - число столбцов в ядре свертки;

* int Ds - на единицу большее число нулевых столбцов после каждого исходного столбца весов (кроме последнего столбца) вдоль размерности S (Dilation);

* int Dr - на единицу большее число нулевых строк после каждой исходной строки весов (кроме последней строки) вдоль размерности R (Dilation);

* int Sw - шаг свертки вдоль размерности W куба данных (Stride);

* int Sh - шаг свертки вдоль размерности H куба данных (Stride);

* int K - число ядер свертки;

* int sn - номер знакового бита в значениях данных и весов (пример: sn == 7 для int8; sn == 15 для int16);

* int LINES - число строк в матрице умножителя;

* int COLUMNS - число столбцов в матрице умножителя;

* int BUF_NMB - число умножителей;

* char *user_X_data_file_name - имя файла, содержащего значения, формирующие куб данных;

* char *user_W_data_base_file_name - база имени для имен файлов, содержащих значения, формирующих ядра свертки;

* char *user_Y_data_file_name - имя файла, куда будет записана матрица, полученная сверткой куба данных с ядрами свертки;

* char *X_data_file_name - имя .bin файла, куда будет записана матрица данных, сформированная из значений куба данных с учетом харектеристик свертки;

* char *W_data_file_name - имя .bin файла, куда будет записана матрица весов, сформированная из значений ядер свертки с учетом харектеристик свертки;

* char *Y_data_file_name - имя .bin файла, куда будет записана матрица, полученная сверткой куба данных с ядрами свертки.

Имя файла, содержащего значения конкретного ядра свертки, формируется по правилу: к базе имени файала (user_W_data_base_file_name) приписывается номер ядра.

Значения, формирующие куб данных и ядра свертки, должны быть записаны в соответствующие файлы в шестнадцатиричном виде (регистр и префикс 0x - без разницы), через пробел или через запятую (возможно одновремнно с пробелом и запятой), с допустимостью использования перехода на следующую строку.

Порядок записи значений. Представим, что куб данных состоит из матрицы HxW, где каждый элемент матрицы - вектор длинной C, нулевой элемент вектора расположен во фронтальной плоскости куба данных, а C-1 - в задней. Тогда запись значений куба данных в файл должна происходить следующим образом: от нулевого элемента вектора, расположенного в нулевой строке нулевого столбца матрицы HxW, до C-1 элемента, затем от нулевого элемента вектора, расположенного в нулевой строке первого столбца матрицы HxW, до C-1 элемента, и т. д. Аналогично происходит запись в файл значений ядра свертки.

Число строк в матрице умножителя (LINES) в аппаратной реализации равно 16, число столбцов (COLUMNS) равно 64, число умножителей (BUF_NMB) равно 8 (для макета выбран только один умножитель). Для референсной модели необязательно, чтобы значения LINES, COLUMNS, BUF_NMB соответствовали своему аппаратному прообразу.

Размерность куба данных, ядер свертки и характеристик свертки должны быть согласованы между собой.

== Генерация конфигурационного ini-файла

С помощью скрипта create_configini.pl возможно сгенерировать кофигурационный файл, который будет содержать значения входных параметров референсной модели (значения для полей структуры типа matrix_config_t).

Для работы скрипта, в папке со скриптом должен лежать файл config_base.ini. Пример запуска скрипта:
----
rumboot/src/platform/scr1/targets/simple-rom/demonstrator/input% perl get_configini.pl 7 32 64 16 
----

Аргументы, передаваемые скрипту из командной строки:

* номер знакового бита в значениях входных данных и весов (размернось данных) - sn, <7> (восьмибитные знаковые целые);

* число строк в матрице данных - Hout*Wout, <32>;

* число столбцов в матрице данных - R*S*Cfootnote:[В описании эскизного проекта блока нейроускорителя приведена такая запись, но на самом деле, в этом произведении должны использоваться размерности ядра свертки с учетом растяжения (dilation), соответственно, приведенная выше запись будет верной только в случае коеффициентов растяжения Dr, Ds равных 1, в ином случае под R, S следует подразумевать Rdilated Sdilated.], <64>;

* число ядер свертки - K, <16>.

В результате работы скрипта будут получены:

* файл hwc, где записаны значения куба данных;

* файлы rsc_<номер ядра свертки>, где записаны значения соответствующих ядер свертки;

* файл config_ini, где записаны значения входных параметров референсной модели.

Аргументы, передаваемые скрипту из командной строки, выполняют роль граничных условий для подбора скриптом следующих значений входных параметров референсной модели:

* H, W, R, S, C.

Остальные значения входных параметров референсной модели копируются из файла config_base.ini.
