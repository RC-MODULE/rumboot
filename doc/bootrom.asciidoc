ifndef::wd[]
:wd: pages
//:doctype: book
//:docinfo:
:toc: macro
:toclevels: 3
:toc-title: Содержание
:pagenums:
:chapter-label:
:imagesdir: ./
[[SOC_BOOT]]
= Процедура загрузки микросхемы
//include::../../../asciidoc_common/header.asciidoc[]
endif::[]

ifeval::["{wd}"=="pages"]
toc::[]
endif::[]

// generic, o32t
ifndef::soc[]
:soc: o32t
endif::[]

== Общее описание алгоритма начальной загрузки микросхемы

include::soc/{soc}/bootseq.asciidoc[]

== ПЗУ начальной загрузки (bootrom)

=== Общее описание работы начального загрузчика

Поведение первичного загрузчика определяется BOOTM выводами микросхемы. Значение выводов считывается однократно при сбросе микрсхемы (кроме сигнала SD Card Detect, значение которого проверяется при попытке загрузиться с SD карты). Общий алгоритм поведения загрузчика представлен на рисунке <<figure-rumboot-flow>>

В общем случае загрузчик работает в одном из двух режимов:

* Хост-режим - ожидание загрузки образа вторичного загрузчика в память по UART или иному технологическому каналу (EDCL). Этот режим используется для отладки и внутрисхемной прошивки готовых изделий.

* Нормальный режим - поиск образов вторичного загрузчика на внешних ПЗУ, загрузка во внутреннюю память и их исполнение. Это основной режим работы.

include::soc/{soc}/bootflow.asciidoc[]

Ключевыми для поведения загрузчика являются три конфигурационных вывода:

* _SELFTEST_: Вывод выбирает выполнять ли процедуру самотестирования при старте микросхемы. 0 - Не выполнять, 1 - выполнять.

* _HOST_: Вывод включает принудительную загрузку в Host-режиме . 0 - Не задействовать, 1 - задействовать. Подробнее см. (раздел Host-режим)

* _UART_SPEED_: Выводы, задающие скорость отладочного вывода при начальной загрузки.

Полный список конфигурационных выводов приведен в таблице <<tbl_sys_boot_cfg>>.

NOTE: В готовых изделиях рекомендуется сократить количество конфигурационных выводов до одного: HOST. HOST-режим предназначен для внутрисхемного программирования внешних микросхем памяти и потребуется в ходе процедуры начальной прошивки и тестирования иделий. 

=== Рекомендации по схемотехнике

==== Использование выводов BOOTM как GPIO при нормальной работе микросхемы

TODO: Привести схему из РЭ

==== Реализация автоматического сброса/подачи питания через диагностический разъем UART.

При использовании микросхем преобразователей USB-to-UART в составе изделия на базе данной микросхемы удобно реализовать процедуру автоматического сброса/снятия питания. Это позволяет автоматизировать процессы тестирования и упростить отладку программного обеспечения. 

Для этой задачи можно использовать выводы GPIO представленные на некоторых микросхемах преобразователей интерфейсов, такие как Prolific PL2303HXA или Silicon Labs CP2102 / CP2103.

Рекомендованное подключение линий указано в таблице <<tbl_pl2303>>.

.Рекомендованное подключение выводов сброса и управления питанием
[#tbl_pl2303,cols="10,10,10",options="header"]
|===
|Вывод PL2303HXA/HXD
|Вывод микросхемы
|Комментарий

|GP0|RESET| Active Low
|GP1|POWER| Active Low
|GP2|HOST | Для PL2303HXD/CP2102
|=== 

WARNING: Популярные миксрохемы FTDI FT232RL и подобные не подходят для этой задачи, так как не доспускают одновременную работу преобразователя USB-to-UART и управление выводами CBUS. Более того, на момент написания этого документа в продаже широко распространены контрафактные микросхемы FTDI в которых режим управления выводами CBUS не функционирует. 
