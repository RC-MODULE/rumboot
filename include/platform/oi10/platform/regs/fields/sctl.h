/*
 * sctl.h
 *
 *  Created on: Mar 26, 2019
 *      Author: v.strukov
 */

#ifndef RUMBOOT_INCLUDE_PLATFORM_OI10_PLATFORM_REGS_FIELDS_SCTL_H_
#define RUMBOOT_INCLUDE_PLATFORM_OI10_PLATFORM_REGS_FIELDS_SCTL_H_
#include <rumboot/macros.h>

BEGIN_ENUM( SCTL_KMBIST_CHAIN_SF_FIELD )
    DECLARE_ENUM_VAL(   SCTL_KMBIST_CHAIN_SF_TM_i,       0       )
    DECLARE_ENUM_VAL(   SCTL_KMBIST_CHAIN_SF_TM_n,       4       )
    DECLARE_ENUM_VAL(   SCTL_KMBIST_CHAIN_SF_TM_mask,    FIELD_MASK32(SCTL_KMBIST_CHAIN_SF_TM_i, SCTL_KMBIST_CHAIN_SF_TM_n) )
    DECLARE_ENUM_VAL(   SCTL_KMBIST_CHAIN_SF_TM_val,     0b0110  )

    DECLARE_ENUM_VAL(   SCTL_KMBIST_CHAIN_SF_START_i,       4       )
    DECLARE_ENUM_VAL(   SCTL_KMBIST_CHAIN_SF_START_n,       1       )
    DECLARE_ENUM_VAL(   SCTL_KMBIST_CHAIN_SF_START_mask,    FIELD_MASK32(SCTL_KMBIST_CHAIN_SF_START_i, SCTL_KMBIST_CHAIN_SF_START_n) )

    DECLARE_ENUM_VAL(   SCTL_KMBIST_CHAIN_SF_FAIL_i,       5       )
    DECLARE_ENUM_VAL(   SCTL_KMBIST_CHAIN_SF_FAIL_n,       1       )
    DECLARE_ENUM_VAL(   SCTL_KMBIST_CHAIN_SF_FAIL_mask,    FIELD_MASK32(SCTL_KMBIST_CHAIN_SF_FAIL_i, SCTL_KMBIST_CHAIN_SF_FAIL_n) )

    DECLARE_ENUM_VAL(   SCTL_KMBIST_CHAIN_SF_DONE_i,       6       )
    DECLARE_ENUM_VAL(   SCTL_KMBIST_CHAIN_SF_DONE_n,       1       )
    DECLARE_ENUM_VAL(   SCTL_KMBIST_CHAIN_SF_DONE_mask,    FIELD_MASK32(SCTL_KMBIST_CHAIN_SF_DONE_i, SCTL_KMBIST_CHAIN_SF_DONE_n) )
END_ENUM( SCTL_KMBIST_CHAIN_SF_FIELD )

BEGIN_ENUM( SCTL_PPC_SYS_CONF_FIELD )
    DECLARE_ENUM_VAL(   SCTL_PPC_SYS_CONF_MPIC_TMRCLK_SEL_i,       0       )
    DECLARE_ENUM_VAL(   SCTL_PPC_SYS_CONF_MPIC_TMRCLK_SEL_n,       1       )
    DECLARE_ENUM_VAL(   SCTL_PPC_SYS_CONF_MPIC_TMRCLK_SEL_mask,    FIELD_MASK32(SCTL_PPC_SYS_CONF_MPIC_TMRCLK_SEL_i, SCTL_PPC_SYS_CONF_MPIC_TMRCLK_SEL_n) )
    DECLARE_ENUM_VAL(   SCTL_PPC_SYS_CONF_MPIC_TMRCLK_SEL_val,     0       )

    DECLARE_ENUM_VAL(   SCTL_PPC_SYS_CONF_PPC_SYNC_INFO_i,       2       )
    DECLARE_ENUM_VAL(   SCTL_PPC_SYS_CONF_PPC_SYNC_INFO_n,       1       )
    DECLARE_ENUM_VAL(   SCTL_PPC_SYS_CONF_PPC_SYNC_INFO_mask,    FIELD_MASK32(SCTL_PPC_SYS_CONF_PPC_SYNC_INFO_i, SCTL_PPC_SYS_CONF_PPC_SYNC_INFO_n) )
    DECLARE_ENUM_VAL(   SCTL_PPC_SYS_CONF_PPC_SYNC_INFO_val,     0       )

    DECLARE_ENUM_VAL(   SCTL_PPC_SYS_CONF_PLB4_DIVMODE_i,       3       )
    DECLARE_ENUM_VAL(   SCTL_PPC_SYS_CONF_PLB4_DIVMODE_n,       2       )
    DECLARE_ENUM_VAL(   SCTL_PPC_SYS_CONF_PLB4_DIVMODE_mask,    FIELD_MASK32(SCTL_PPC_SYS_CONF_PLB4_DIVMODE_i, SCTL_PPC_SYS_CONF_PLB4_DIVMODE_n) )
    DECLARE_ENUM_VAL(   SCTL_PPC_SYS_CONF_PLB4_DIVMODE_val,     3       )
END_ENUM( SCTL_PPC_SYS_CONF_FIELD )

BEGIN_ENUM( SCTL_SLP_CTRL_FIELD )
    DECLARE_ENUM_VAL(   SCTL_SLP_CTRL_STATUS_i,       0       )
    DECLARE_ENUM_VAL(   SCTL_SLP_CTRL_STATUS_n,       1       )
    DECLARE_ENUM_VAL(   SCTL_SLP_CTRL_STATUS_mask,    FIELD_MASK32(SCTL_SLP_CTRL_STATUS_i, SCTL_SLP_CTRL_STATUS_n) )
    DECLARE_ENUM_VAL(   SCTL_SLP_CTRL_STATUS_val,     0       )

    DECLARE_ENUM_VAL(   SCTL_SLP_CTRL_WU_INT_i,       1       )
    DECLARE_ENUM_VAL(   SCTL_SLP_CTRL_WU_INT_n,       1       )
    DECLARE_ENUM_VAL(   SCTL_SLP_CTRL_WU_INT_mask,    FIELD_MASK32(SCTL_SLP_CTRL_WU_INT_i, SCTL_SLP_CTRL_WU_INT_n) )
    DECLARE_ENUM_VAL(   SCTL_SLP_CTRL_WU_INT_val,     0       )

    DECLARE_ENUM_VAL(   SCTL_SLP_CTRL_TYPE_i,         2       )
    DECLARE_ENUM_VAL(   SCTL_SLP_CTRL_TYPE_n,         2       )
    DECLARE_ENUM_VAL(   SCTL_SLP_CTRL_TYPE_mask,      FIELD_MASK32(SCTL_SLP_CTRL_TYPE_i, SCTL_SLP_CTRL_TYPE_n) )
    DECLARE_ENUM_VAL(   SCTL_SLP_CTRL_TYPE_val,       0       )
END_ENUM( SCTL_SLP_CTRL_FIELD )

BEGIN_ENUM( SCTL_IFSYS_ETH_CTRL_FIELD )
    DECLARE_ENUM_VAL(   SCTL_IFSYS_ETH_CTRL_EDCLADDR_LSB_0_i,       0       )
    DECLARE_ENUM_VAL(   SCTL_IFSYS_ETH_CTRL_EDCLADDR_LSB_0_n,       4       )
    DECLARE_ENUM_VAL(   SCTL_IFSYS_ETH_CTRL_EDCLADDR_LSB_0_mask,    FIELD_MASK32(SCTL_IFSYS_ETH_CTRL_EDCLADDR_LSB_0_i, SCTL_IFSYS_ETH_CTRL_EDCLADDR_LSB_0_n) )
    DECLARE_ENUM_VAL(   SCTL_IFSYS_ETH_CTRL_EDCLADDR_LSB_0_val,     0       )

    DECLARE_ENUM_VAL(   SCTL_IFSYS_ETH_CTRL_EDCLADDR_LSB_1_i,       16       )
    DECLARE_ENUM_VAL(   SCTL_IFSYS_ETH_CTRL_EDCLADDR_LSB_1_n,       4       )
    DECLARE_ENUM_VAL(   SCTL_IFSYS_ETH_CTRL_EDCLADDR_LSB_1_mask,    FIELD_MASK32(SCTL_IFSYS_ETH_CTRL_EDCLADDR_LSB_1_i, SCTL_IFSYS_ETH_CTRL_EDCLADDR_LSB_1_n) )
    DECLARE_ENUM_VAL(   SCTL_IFSYS_ETH_CTRL_EDCLADDR_LSB_1_val,     1       )
END_ENUM( SCTL_IFSYS_ETH_CTRL_FIELD )

BEGIN_ENUM( SCTL_IFSYS_ETH_HPROT_FIELD )
    DECLARE_ENUM_VAL(   SCTL_IFSYS_ETH_HPROT_ETH0_W_SIZE2_i,       0       )
    DECLARE_ENUM_VAL(   SCTL_IFSYS_ETH_HPROT_ETH0_W_SIZE2_n,       4       )
    DECLARE_ENUM_VAL(   SCTL_IFSYS_ETH_HPROT_ETH0_W_SIZE2_mask,    FIELD_MASK32(SCTL_IFSYS_ETH_HPROT_ETH0_W_SIZE2_i, SCTL_IFSYS_ETH_HPROT_ETH0_W_SIZE2_n) )
    DECLARE_ENUM_VAL(   SCTL_IFSYS_ETH_HPROT_ETH0_W_SIZE2_val,     3       )

    DECLARE_ENUM_VAL(   SCTL_IFSYS_ETH_HPROT_ETH0_W_SIZE0_i,       4       )
    DECLARE_ENUM_VAL(   SCTL_IFSYS_ETH_HPROT_ETH0_W_SIZE0_n,       4       )
    DECLARE_ENUM_VAL(   SCTL_IFSYS_ETH_HPROT_ETH0_W_SIZE0_mask,    FIELD_MASK32(SCTL_IFSYS_ETH_HPROT_ETH0_W_SIZE0_i, SCTL_IFSYS_ETH_HPROT_ETH0_W_SIZE0_n) )
    DECLARE_ENUM_VAL(   SCTL_IFSYS_ETH_HPROT_ETH0_W_SIZE0_val,     3       )

    DECLARE_ENUM_VAL(   SCTL_IFSYS_ETH_HPROT_ETH0_R_SIZE2_i,       8       )
    DECLARE_ENUM_VAL(   SCTL_IFSYS_ETH_HPROT_ETH0_R_SIZE2_n,       4       )
    DECLARE_ENUM_VAL(   SCTL_IFSYS_ETH_HPROT_ETH0_R_SIZE2_mask,    FIELD_MASK32(SCTL_IFSYS_ETH_HPROT_ETH0_W_SIZE2_i, SCTL_IFSYS_ETH_HPROT_ETH0_W_SIZE2_n) )
    DECLARE_ENUM_VAL(   SCTL_IFSYS_ETH_HPROT_ETH0_R_SIZE2_val,     3       )

    DECLARE_ENUM_VAL(   SCTL_IFSYS_ETH_HPROT_ETH0_R_SIZE0_i,       12       )
    DECLARE_ENUM_VAL(   SCTL_IFSYS_ETH_HPROT_ETH0_R_SIZE0_n,       4       )
    DECLARE_ENUM_VAL(   SCTL_IFSYS_ETH_HPROT_ETH0_R_SIZE0_mask,    FIELD_MASK32(SCTL_IFSYS_ETH_HPROT_ETH0_R_SIZE0_i, SCTL_IFSYS_ETH_HPROT_ETH0_R_SIZE0_n) )
    DECLARE_ENUM_VAL(   SCTL_IFSYS_ETH_HPROT_ETH0_R_SIZE0_val,     3       )

    DECLARE_ENUM_VAL(   SCTL_IFSYS_ETH_HPROT_ETH1_W_SIZE2_i,       16      )
    DECLARE_ENUM_VAL(   SCTL_IFSYS_ETH_HPROT_ETH1_W_SIZE2_n,       4       )
    DECLARE_ENUM_VAL(   SCTL_IFSYS_ETH_HPROT_ETH1_W_SIZE2_mask,    FIELD_MASK32(SCTL_IFSYS_ETH_HPROT_ETH1_W_SIZE2_i, SCTL_IFSYS_ETH_HPROT_ETH1_W_SIZE2_n) )
    DECLARE_ENUM_VAL(   SCTL_IFSYS_ETH_HPROT_ETH1_W_SIZE2_val,     3       )

    DECLARE_ENUM_VAL(   SCTL_IFSYS_ETH_HPROT_ETH1_W_SIZE0_i,       20      )
    DECLARE_ENUM_VAL(   SCTL_IFSYS_ETH_HPROT_ETH1_W_SIZE0_n,       4       )
    DECLARE_ENUM_VAL(   SCTL_IFSYS_ETH_HPROT_ETH1_W_SIZE0_mask,    FIELD_MASK32(SCTL_IFSYS_ETH_HPROT_ETH1_W_SIZE0_i, SCTL_IFSYS_ETH_HPROT_ETH1_W_SIZE0_n) )
    DECLARE_ENUM_VAL(   SCTL_IFSYS_ETH_HPROT_ETH1_W_SIZE0_val,     3       )

    DECLARE_ENUM_VAL(   SCTL_IFSYS_ETH_HPROT_ETH1_R_SIZE2_i,       24      )
    DECLARE_ENUM_VAL(   SCTL_IFSYS_ETH_HPROT_ETH1_R_SIZE2_n,       4       )
    DECLARE_ENUM_VAL(   SCTL_IFSYS_ETH_HPROT_ETH1_R_SIZE2_mask,    FIELD_MASK32(SCTL_IFSYS_ETH_HPROT_ETH1_W_SIZE2_i, SCTL_IFSYS_ETH_HPROT_ETH1_W_SIZE2_n) )
    DECLARE_ENUM_VAL(   SCTL_IFSYS_ETH_HPROT_ETH1_R_SIZE2_val,     3       )

    DECLARE_ENUM_VAL(   SCTL_IFSYS_ETH_HPROT_ETH1_R_SIZE0_i,       28       )
    DECLARE_ENUM_VAL(   SCTL_IFSYS_ETH_HPROT_ETH1_R_SIZE0_n,       4       )
    DECLARE_ENUM_VAL(   SCTL_IFSYS_ETH_HPROT_ETH1_R_SIZE0_mask,    FIELD_MASK32(SCTL_IFSYS_ETH_HPROT_ETH1_R_SIZE0_i, SCTL_IFSYS_ETH_HPROT_ETH1_R_SIZE0_n) )
    DECLARE_ENUM_VAL(   SCTL_IFSYS_ETH_HPROT_ETH1_R_SIZE0_val,     3       )
END_ENUM( SCTL_IFSYS_ETH_HPROT_FIELD )

BEGIN_ENUM( SCTL_DEFAULT_VALUES)
    DECLARE_ENUM_VAL( SCTL_PPC_SYS_CONF_dflt,       SCTL_PPC_SYS_CONF_PLB4_DIVMODE_val << SCTL_PPC_SYS_CONF_PLB4_DIVMODE_i )
    DECLARE_ENUM_VAL( SCTL_IFSYS_ETH_CTRL_dflt,     SCTL_IFSYS_ETH_CTRL_EDCLADDR_LSB_1_val << SCTL_IFSYS_ETH_CTRL_EDCLADDR_LSB_1_i )
    DECLARE_ENUM_VAL( SCTL_IFSYS_ETH_HPROT_dflt,   ((SCTL_IFSYS_ETH_HPROT_ETH0_W_SIZE2_val << SCTL_IFSYS_ETH_HPROT_ETH0_W_SIZE2_i)
                                                |   (SCTL_IFSYS_ETH_HPROT_ETH0_W_SIZE0_val << SCTL_IFSYS_ETH_HPROT_ETH0_W_SIZE0_i)
                                                |   (SCTL_IFSYS_ETH_HPROT_ETH0_R_SIZE2_val << SCTL_IFSYS_ETH_HPROT_ETH0_R_SIZE2_i)
                                                |   (SCTL_IFSYS_ETH_HPROT_ETH0_R_SIZE0_val << SCTL_IFSYS_ETH_HPROT_ETH0_R_SIZE0_i)
                                                |   (SCTL_IFSYS_ETH_HPROT_ETH1_W_SIZE2_val << SCTL_IFSYS_ETH_HPROT_ETH1_W_SIZE2_i)
                                                |   (SCTL_IFSYS_ETH_HPROT_ETH1_W_SIZE0_val << SCTL_IFSYS_ETH_HPROT_ETH1_W_SIZE0_i)
                                                |   (SCTL_IFSYS_ETH_HPROT_ETH1_R_SIZE2_val << SCTL_IFSYS_ETH_HPROT_ETH1_R_SIZE2_i)
                                                |   (SCTL_IFSYS_ETH_HPROT_ETH1_R_SIZE0_val << SCTL_IFSYS_ETH_HPROT_ETH1_R_SIZE0_i)))
END_ENUM( SCTL_DEFAULT_VALUES)

BEGIN_ENUM( SCTL_MASK_VALUES)
    DECLARE_ENUM_VAL( SCTL_KMBIST_CHAIN_SF_mask,         0x7F)
    DECLARE_ENUM_VAL( SCTL_PPC_SYS_CONF_mask,      ((SCTL_PPC_SYS_CONF_PLB4_DIVMODE_mask)
                                                |   (SCTL_PPC_SYS_CONF_PPC_SYNC_INFO_mask)
                                                |   (SCTL_PPC_SYS_CONF_MPIC_TMRCLK_SEL_mask)))
    DECLARE_ENUM_VAL( SCTL_PPC_SLP_CTRL_mask,   0xf)
    DECLARE_ENUM_VAL( SCTL_PPC_PMU_CTRL_mask,   0x1f)
    DECLARE_ENUM_VAL( SCTL_IFSYS_ETH_CTRL_mask,    ((SCTL_IFSYS_ETH_CTRL_EDCLADDR_LSB_0_mask)
                                                |   (SCTL_IFSYS_ETH_CTRL_EDCLADDR_LSB_1_mask)))
    DECLARE_ENUM_VAL( SCTL_IFSYS_ETH_HPROT_mask,    0xffffffff)
END_ENUM( SCTL_MASK_VALUES)


#endif /* RUMBOOT_INCLUDE_PLATFORM_OI10_PLATFORM_REGS_FIELDS_SCTL_H_ */
