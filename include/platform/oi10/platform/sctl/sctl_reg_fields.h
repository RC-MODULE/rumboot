#ifndef __SCTL_REG_FIELDS_H__
#define __SCTL_REG_FIELDS_H__


#include <platform/oi10/platform/mivem_macro.h>


BEGIN_ENUM( SCTL_PPC_SLP_CTRL_FIELD )
DECLARE_ENUM_VAL( SCTL_PPC_SLP_CTRL_PPCx_SLP_TYPE_n,    2 )
DECLARE_ENUM_VAL( SCTL_PPC_SLP_CTRL_PPC0_SLP_TYPE_i,    4 )
DECLARE_ENUM_VAL( SCTL_PPC_SLP_CTRL_PPC0_SLP_TYPE_e,    IBM_BIT_INDEX(32, SCTL_PPC_SLP_CTRL_PPC0_SLP_TYPE_i) )
DECLARE_ENUM_VAL( SCTL_PPC_SLP_CTRL_PPC1_SLP_TYPE_i,    6 )
DECLARE_ENUM_VAL( SCTL_PPC_SLP_CTRL_PPC1_SLP_TYPE_e,    IBM_BIT_INDEX(32, SCTL_PPC_SLP_CTRL_PPC1_SLP_TYPE_i) )
END_ENUM( SCTL_PPC_SLP_CTRL_FIELD )

BEGIN_ENUM( SCTL_PPCx_SLP_TYPE )
DECLARE_ENUM_VAL( SCTL_PPCx_SLP_CPU_DOZE,       0b00 )
DECLARE_ENUM_VAL( SCTL_PPCx_SLP_CPU_SLP,        0b01 )
DECLARE_ENUM_VAL( SCTL_PPCx_SLP_CPU_L2C_SLP,    0b10 )
END_ENUM( SCTL_PPCx_SLP_TYPE )

BEGIN_ENUM( SCTL_INTREQ_CPU2DSP_FIELD )
DECLARE_ENUM_VAL( SCTL_INTREQ_CPU2DSP_DSP0NMC0_INTLP_i,     0  )
DECLARE_ENUM_VAL( SCTL_INTREQ_CPU2DSP_DSP0NMC0_INTLP_n,     1  )
DECLARE_ENUM_VAL( SCTL_INTREQ_CPU2DSP_DSP0NMC0_INTHP_i,     1  )
DECLARE_ENUM_VAL( SCTL_INTREQ_CPU2DSP_DSP0NMC0_INTHP_n,     1  )
DECLARE_ENUM_VAL( SCTL_INTREQ_CPU2DSP_DSP0NMC0_INTNMI_i,    2  )
DECLARE_ENUM_VAL( SCTL_INTREQ_CPU2DSP_DSP0NMC0_INTNMI_n,    1  )
DECLARE_ENUM_VAL( SCTL_INTREQ_CPU2DSP_DSP0NMC1_INTLP_i,     3  )
DECLARE_ENUM_VAL( SCTL_INTREQ_CPU2DSP_DSP0NMC1_INTLP_n,     1  )
DECLARE_ENUM_VAL( SCTL_INTREQ_CPU2DSP_DSP0NMC1_INTHP_i,     4  )
DECLARE_ENUM_VAL( SCTL_INTREQ_CPU2DSP_DSP0NMC1_INTHP_n,     1  )
DECLARE_ENUM_VAL( SCTL_INTREQ_CPU2DSP_DSP0NMC1_INTNMI_i,    5  )
DECLARE_ENUM_VAL( SCTL_INTREQ_CPU2DSP_DSP0NMC1_INTNMI_n,    1  )
DECLARE_ENUM_VAL( SCTL_INTREQ_CPU2DSP_DSP1NMC0_INTLP_i,     6  )
DECLARE_ENUM_VAL( SCTL_INTREQ_CPU2DSP_DSP1NMC0_INTLP_n,     1  )
DECLARE_ENUM_VAL( SCTL_INTREQ_CPU2DSP_DSP1NMC0_INTHP_i,     7  )
DECLARE_ENUM_VAL( SCTL_INTREQ_CPU2DSP_DSP1NMC0_INTHP_n,     1  )
DECLARE_ENUM_VAL( SCTL_INTREQ_CPU2DSP_DSP1NMC0_INTNMI_i,    8  )
DECLARE_ENUM_VAL( SCTL_INTREQ_CPU2DSP_DSP1NMC0_INTNMI_n,    1  )
DECLARE_ENUM_VAL( SCTL_INTREQ_CPU2DSP_DSP1NMC1_INTLP_i,     9  )
DECLARE_ENUM_VAL( SCTL_INTREQ_CPU2DSP_DSP1NMC1_INTLP_n,     1  )
DECLARE_ENUM_VAL( SCTL_INTREQ_CPU2DSP_DSP1NMC1_INTHP_i,     10 )
DECLARE_ENUM_VAL( SCTL_INTREQ_CPU2DSP_DSP1NMC1_INTHP_n,     1  )
DECLARE_ENUM_VAL( SCTL_INTREQ_CPU2DSP_DSP1NMC1_INTNMI_i,    11 )
DECLARE_ENUM_VAL( SCTL_INTREQ_CPU2DSP_DSP1NMC1_INTNMI_n,    1  )
END_ENUM( SCTL_INTREQ_CPU2DSP_FIELD )

BEGIN_ENUM( SCTL_INTCLR_DSP2CPU_FIELD )
DECLARE_ENUM_VAL( SCTL_INTCLR_DSP2CPU_DSP0NMC0_INTLP_i,     0  )
DECLARE_ENUM_VAL( SCTL_INTCLR_DSP2CPU_DSP0NMC0_INTLP_n,     1  )
DECLARE_ENUM_VAL( SCTL_INTCLR_DSP2CPU_DSP0NMC0_INTHP_i,     1  )
DECLARE_ENUM_VAL( SCTL_INTCLR_DSP2CPU_DSP0NMC0_INTHP_n,     1  )

DECLARE_ENUM_VAL( SCTL_INTCLR_DSP2CPU_DSP0NMC1_INTLP_i,     2  )
DECLARE_ENUM_VAL( SCTL_INTCLR_DSP2CPU_DSP0NMC1_INTLP_n,     1  )
DECLARE_ENUM_VAL( SCTL_INTCLR_DSP2CPU_DSP0NMC1_INTHP_i,     3  )
DECLARE_ENUM_VAL( SCTL_INTCLR_DSP2CPU_DSP0NMC1_INTHP_n,     1  )

DECLARE_ENUM_VAL( SCTL_INTCLR_DSP2CPU_DSP1NMC0_INTLP_i,     4  )
DECLARE_ENUM_VAL( SCTL_INTCLR_DSP2CPU_DSP1NMC0_INTLP_n,     1  )
DECLARE_ENUM_VAL( SCTL_INTCLR_DSP2CPU_DSP1NMC0_INTHP_i,     5  )
DECLARE_ENUM_VAL( SCTL_INTCLR_DSP2CPU_DSP1NMC0_INTHP_n,     1  )

DECLARE_ENUM_VAL( SCTL_INTCLR_DSP2CPU_DSP1NMC1_INTLP_i,     6  )
DECLARE_ENUM_VAL( SCTL_INTCLR_DSP2CPU_DSP1NMC1_INTLP_n,     1  )
DECLARE_ENUM_VAL( SCTL_INTCLR_DSP2CPU_DSP1NMC1_INTHP_i,     7  )
DECLARE_ENUM_VAL( SCTL_INTCLR_DSP2CPU_DSP1NMC1_INTHP_n,     1  )
END_ENUM( SCTL_INTCLR_DSP2CPU_FIELD )

BEGIN_ENUM( SCTL_MLT_ADR_MSB1_FIELD )
DECLARE_ENUM_VAL( SCTL_MLT_ADR_MSB1_ADR_MSB_AUDMA_i,    4 )                                 // Bity [35:32] adresa hlb_audio.audma
DECLARE_ENUM_VAL( SCTL_MLT_ADR_MSB1_ADR_MSB_AUDMA_e,    IBM_BIT_INDEX(32, SCTL_MLT_ADR_MSB1_ADR_MSB_AUDMA_i) )
DECLARE_ENUM_VAL( SCTL_MLT_ADR_MSB1_ADR_MSB_AUDMA_n,    4 )
DECLARE_ENUM_VAL( SCTL_MLT_ADR_MSB1_ADR_MSB_JPEG_i,     0 )                                 // Bity [35:32] adresa hlb codec.jpeg
DECLARE_ENUM_VAL( SCTL_MLT_ADR_MSB1_ADR_MSB_JPEG_e,     IBM_BIT_INDEX(32, SCTL_MLT_ADR_MSB1_ADR_MSB_JPEG_i) )
DECLARE_ENUM_VAL( SCTL_MLT_ADR_MSB1_ADR_MSB_JPEG_n,     4 )
END_ENUM( SCTL_MLT_ADR_MSB1_FIELD )


#endif // __SCTL_REG_FIELDS_H__
