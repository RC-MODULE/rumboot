/*
data ".data.macro"
    FIFOBASE: word = 00039400h;
    DATA: word = 0;
    CONTROL: word = 2;
    EXITFLAG: word = 80000000h;
    ENABLEFLAG: word = 00000001h;
    STOPWRITEFLAG: word = 00000100h;
end ".data.macro";
*/

macro rumboot_nmc_init_core()
extern _rumboot_platform_stack_start: label;
    ar0=0;
    ar1=0;
    ar2=0;
    ar3=0;
    ar4=0;
    ar5=0;
    ar6=0;
    gr0=0;
    gr1=0;
    gr2=0;
    gr3=0;
    gr4=0;
    gr5=0;
    gr6=0;
    gr7=0;
    ar7 = _rumboot_platform_stack_start;
end rumboot_nmc_init_core;

macro rumboot_runtime_init(raddr)
    ar5 = raddr;
    gr0 = 0;
    gr1 = 0_b00bc0deh;
    [ar5] = gr1;
    [ar5 + 2] = gr0;
    [ar5 + 0Ch] = gr0;

    gr1 = 1c0deh; 
    [ar5 + 0bh]=gr1;

    gr1 = 2c0deh; 
    [ar5 + 01h]=gr1;

    ar0 = 00039402h;
    gr0 = 1;
    [ar0] = gr0;
end rumboot_runtime_init;

macro rumboot_exit(nevermind, excode)
    /* send EXIT signal */
    ar1 = 00039400h;
    gr0 = 80000000h or excode;
    [ar1] = gr0;

    /* tell job is done and one can grab data */
    gr0 = 00000101b;
    gr1 = 2;
    [ar1+=gr1] = gr0;
end rumboot_exit;
